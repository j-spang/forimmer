{"version":3,"file":"forimmer.esm.js","sources":["../src/store.ts","../src/use_store_state.ts"],"sourcesContent":["import produce, { Draft, setAutoFreeze } from 'immer';\n\nsetAutoFreeze(true);\nif (process.env.NODE_ENV !== 'production') {\n  setAutoFreeze(false);\n}\n\nexport type StateProducer<State extends {}> = (\n  draft: Draft<State | undefined>\n) => Draft<State> | void;\n\nexport type StateListener<State extends {}> = (\n  state: State | undefined\n) => void;\n\nexport type Unsubscribe = () => void;\n\nexport interface Store<State extends {}> {\n  getCurrentState(): State | undefined;\n  subscribe(listener: StateListener<State>): Unsubscribe;\n  createStoreAction<\n    Action extends (payload: any) => Promise<StateProducer<State>> = (\n      payload: any\n    ) => Promise<StateProducer<State>>\n  >(\n    action: Action\n  ): Action;\n  createStoreAction<\n    Action extends () => Promise<StateProducer<State>> = () => Promise<\n      StateProducer<State>\n    >\n  >(\n    action: Action\n  ): Action;\n}\n\nexport function createStore<State extends {}>(\n  currentState?: State\n): Store<State> {\n  const listeners: StateListener<State>[] = [];\n\n  function setState(state: State): void {\n    currentState = state;\n    [...listeners].forEach(listener => listener(currentState));\n  }\n\n  function updateState(producer: StateProducer<State>): void {\n    const newState: State = produce(currentState || {}, draft =>\n      producer(draft as Draft<State>)\n    ) as State;\n    if (newState !== currentState && Object.keys(newState).length > 0) {\n      setState(newState);\n    }\n  }\n\n  return {\n    getCurrentState: () => currentState,\n    subscribe: listener => {\n      listeners.push(listener);\n      return () => {\n        const index = listeners.indexOf(listener);\n        if (index > -1) {\n          listeners.splice(index, 1);\n        }\n      };\n    },\n    createStoreAction<\n      Action extends (payload?: any) => Promise<StateProducer<State>> = (\n        payload?: any\n      ) => Promise<StateProducer<State>>\n    >(action: Action): Action {\n      return ((payload?: any) => {\n        return action(payload).then(producer => updateState(producer));\n      }) as Action;\n    },\n  };\n}\n","import { Store } from './store';\nimport * as React from 'react';\n\nexport function useStoreState<ST extends Store<any>, A = any>(\n  store: ST,\n  subsetProducer: (state: ReturnType<ST['getCurrentState']>) => [A]\n): [A];\n\nexport function useStoreState<ST extends Store<any>, A = any, B = any>(\n  store: ST,\n  subsetProducer: (state: ReturnType<ST['getCurrentState']>) => [A, B]\n): [A, B];\n\nexport function useStoreState<ST extends Store<any>, A = any, B = any, C = any>(\n  store: ST,\n  subsetProducer: (state: ReturnType<ST['getCurrentState']>) => [A, B, C]\n): [A, B, C];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any\n>(\n  store: ST,\n  subsetProducer: (state: ReturnType<ST['getCurrentState']>) => [A, B, C, D]\n): [A, B, C, D];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any\n>(\n  store: ST,\n  subsetProducer: (state: ReturnType<ST['getCurrentState']>) => [A, B, C, D, E]\n): [A, B, C, D, E];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F]\n): [A, B, C, D, E, F];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G]\n): [A, B, C, D, E, F, G];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H]\n): [A, B, C, D, E, F, G, H];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H, I]\n): [A, B, C, D, E, F, G, H, I];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H, I, J]\n): [A, B, C, D, E, F, G, H, I, J];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any,\n  K = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H, I, J, K]\n): [A, B, C, D, E, F, G, H, I, J, K];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any,\n  K = any,\n  L = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H, I, J, K, L]\n): [A, B, C, D, E, F, G, H, I, J, K, L];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any,\n  K = any,\n  L = any,\n  M = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H, I, J, K, L, M]\n): [A, B, C, D, E, F, G, H, I, J, K, L, M];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any,\n  K = any,\n  L = any,\n  M = any,\n  N = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H, I, J, K, L, M, N]\n): [A, B, C, D, E, F, G, H, I, J, K, L, M, N];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any,\n  K = any,\n  L = any,\n  M = any,\n  N = any,\n  O = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]\n): [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any,\n  K = any,\n  L = any,\n  M = any,\n  N = any,\n  O = any,\n  P = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]\n): [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any,\n  K = any,\n  L = any,\n  M = any,\n  N = any,\n  O = any,\n  P = any,\n  Q = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]\n): [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any,\n  K = any,\n  L = any,\n  M = any,\n  N = any,\n  O = any,\n  P = any,\n  Q = any,\n  R = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R]\n): [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any,\n  K = any,\n  L = any,\n  M = any,\n  N = any,\n  O = any,\n  P = any,\n  Q = any,\n  R = any,\n  S = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S]\n): [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any,\n  K = any,\n  L = any,\n  M = any,\n  N = any,\n  O = any,\n  P = any,\n  Q = any,\n  R = any,\n  S = any,\n  T = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T]\n): [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any,\n  K = any,\n  L = any,\n  M = any,\n  N = any,\n  O = any,\n  P = any,\n  Q = any,\n  R = any,\n  S = any,\n  T = any,\n  U = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U]\n): [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any,\n  K = any,\n  L = any,\n  M = any,\n  N = any,\n  O = any,\n  P = any,\n  Q = any,\n  R = any,\n  S = any,\n  T = any,\n  U = any,\n  V = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V]\n): [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any,\n  K = any,\n  L = any,\n  M = any,\n  N = any,\n  O = any,\n  P = any,\n  Q = any,\n  R = any,\n  S = any,\n  T = any,\n  U = any,\n  V = any,\n  W = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W]\n): [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any,\n  K = any,\n  L = any,\n  M = any,\n  N = any,\n  O = any,\n  P = any,\n  Q = any,\n  R = any,\n  S = any,\n  T = any,\n  U = any,\n  V = any,\n  W = any,\n  X = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X]\n): [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any,\n  K = any,\n  L = any,\n  M = any,\n  N = any,\n  O = any,\n  P = any,\n  Q = any,\n  R = any,\n  S = any,\n  T = any,\n  U = any,\n  V = any,\n  W = any,\n  X = any,\n  Y = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [\n    A,\n    B,\n    C,\n    D,\n    E,\n    F,\n    G,\n    H,\n    I,\n    J,\n    K,\n    L,\n    M,\n    N,\n    O,\n    P,\n    Q,\n    R,\n    S,\n    T,\n    U,\n    V,\n    W,\n    X,\n    Y\n  ]\n): [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y];\n\nexport function useStoreState<\n  ST extends Store<any>,\n  A = any,\n  B = any,\n  C = any,\n  D = any,\n  E = any,\n  F = any,\n  G = any,\n  H = any,\n  I = any,\n  J = any,\n  K = any,\n  L = any,\n  M = any,\n  N = any,\n  O = any,\n  P = any,\n  Q = any,\n  R = any,\n  S = any,\n  T = any,\n  U = any,\n  V = any,\n  W = any,\n  X = any,\n  Y = any,\n  Z = any\n>(\n  store: ST,\n  subsetProducer: (\n    state: ReturnType<ST['getCurrentState']>\n  ) => [\n    A,\n    B,\n    C,\n    D,\n    E,\n    F,\n    G,\n    H,\n    I,\n    J,\n    K,\n    L,\n    M,\n    N,\n    O,\n    P,\n    Q,\n    R,\n    S,\n    T,\n    U,\n    V,\n    W,\n    X,\n    Y,\n    Z\n  ]\n): [\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  G,\n  H,\n  I,\n  J,\n  K,\n  L,\n  M,\n  N,\n  O,\n  P,\n  Q,\n  R,\n  S,\n  T,\n  U,\n  V,\n  W,\n  X,\n  Y,\n  Z\n];\n\nexport function useStoreState<ST extends Store<any>>(\n  store: ST,\n  subsetProducer: (state: ReturnType<ST['getCurrentState']>) => any\n): any {\n  const subsetRef = React.useRef<any[]>();\n  const [, reRender] = React.useState(0);\n  if (subsetRef.current === undefined) {\n    subsetRef.current = tryToGetSubset(store.getCurrentState(), subsetProducer);\n  }\n  if (subsetRef.current === undefined) {\n    throwSubsetPromise(store, subsetProducer);\n  }\n  React.useEffect(() => {\n    const unsub = store.subscribe(state => {\n      const newSubset = tryToGetSubset(state, subsetProducer);\n      if (\n        newSubset === undefined ||\n        subsetRef.current === undefined ||\n        newSubset.length !== subsetRef.current.length ||\n        newSubset.findIndex(v => !subsetRef.current.includes(v)) > -1\n      ) {\n        subsetRef.current = newSubset;\n        reRender(Date.now());\n      }\n    });\n    return () => {\n      unsub();\n    };\n  }, []);\n  return subsetRef.current;\n}\n\nfunction throwSubsetPromise<ST extends Store<any>>(\n  store: ST,\n  subsetProducer: (state: ReturnType<ST['getCurrentState']>) => any\n): void {\n  throw new Promise(resolve => {\n    const unsub = store.subscribe(state => {\n      if (tryToGetSubset(state, subsetProducer) !== undefined) {\n        unsub();\n        resolve();\n      }\n    });\n  });\n}\n\nfunction tryToGetSubset<State extends {}>(\n  state: State,\n  subsetProducer: (state: State) => any\n): any[] | undefined {\n  let subset: any[];\n  try {\n    subset = subsetProducer(state);\n  } catch (e) {}\n  if (subset === undefined || subset.findIndex(v => v === undefined) > -1) {\n    return undefined;\n  }\n  return subset;\n}\n"],"names":["setAutoFreeze","process","env","NODE_ENV","createStore","currentState","listeners","setState","state","forEach","listener","updateState","producer","newState","produce","draft","Object","keys","length","getCurrentState","subscribe","push","index","indexOf","splice","createStoreAction","action","payload","then","useStoreState","store","subsetProducer","subsetRef","React","reRender","current","undefined","tryToGetSubset","throwSubsetPromise","unsub","newSubset","findIndex","v","includes","Date","now","Promise","resolve","subset","e"],"mappings":"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"}